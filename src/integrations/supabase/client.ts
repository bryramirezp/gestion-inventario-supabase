// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Custom cookie-based storage for Supabase sessions
const cookieStorage = {
  getItem: (key: string): string | null => {
    // Get cookie by key
    const cookies = document.cookie.split(';');
    for (let cookie of cookies) {
      const [cookieKey, cookieValue] = cookie.trim().split('=');
      if (cookieKey === key) {
        return decodeURIComponent(cookieValue);
      }
    }
    return null;
  },

  setItem: (key: string, value: string): void => {
    // Set cookie with security options
    const expires = new Date();
    expires.setTime(expires.getTime() + (7 * 24 * 60 * 60 * 1000)); // 7 days

    // Use secure and sameSite options for better security
    const isSecure = window.location.protocol === 'https:';
    document.cookie = `${key}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;${isSecure ? 'secure;' : ''}sameSite=strict`;
  },

  removeItem: (key: string): void => {
    // Remove cookie
    const isSecure = window.location.protocol === 'https:';
    document.cookie = `${key}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;${isSecure ? 'secure;' : ''}sameSite=strict`;
  }
};

// Import the supabase client like this:

export const supabase = createClient<Database>(
  SUPABASE_URL,
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,  // Cambiar a true para persistir sesiones
      detectSessionInUrl: true,
      storage: cookieStorage // Use custom cookie storage instead of localStorage
    }
  }
);
